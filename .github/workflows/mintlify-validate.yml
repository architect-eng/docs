name: Validate Mintlify Documentation

on:
  pull_request:
    paths:
      - .github/workflows/mintlify-validate.yml
      - "**/*.mdx"
      - "**/*.md"
      - "docs.json"
      - "mint.json"
      - "**/openapi.yaml"
      - "**/openapi.yml"
      - "**/openapi.json"
  push:
    branches:
      - main
      - master

jobs:
  broken-links:
    name: Check Broken Links
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Check for broken links
        run: |
          echo "::group::Checking for broken links"
          npx mintlify@latest broken-links
          echo "::endgroup::"

  accessibility:
    name: Check Accessibility
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Check accessibility
        run: |
          echo "::group::Checking accessibility"
          npx mintlify@latest a11y
          echo "::endgroup::"

  openapi:
    name: Validate OpenAPI Specs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Validate OpenAPI specs
        run: |
          echo "::group::Validating OpenAPI specifications"

          # Find all OpenAPI spec files (yaml, yml, json)
          openapi_files=$(find . -type f \( -name "openapi.yaml" -o -name "openapi.yml" -o -name "openapi.json" \) 2>/dev/null)

          if [ -z "$openapi_files" ]; then
            echo "No OpenAPI spec files found"
          else
            for file in $openapi_files; do
              echo "Validating $file"
              npx mintlify@latest openapi-check "$file"
            done
          fi

          echo "::endgroup::"

  summary:
    name: Validation Summary
    runs-on: ubuntu-latest
    needs: [broken-links, accessibility, openapi]
    if: always()

    steps:
      - name: Generate Summary
        run: |
          echo "## Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.broken-links.result }}" == "success" ]; then
            echo "✅ **Broken Links Check**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Broken Links Check**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.accessibility.result }}" == "success" ]; then
            echo "✅ **Accessibility Check**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Accessibility Check**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.openapi.result }}" == "success" ]; then
            echo "✅ **OpenAPI Validation**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **OpenAPI Validation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
