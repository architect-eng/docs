name: Validate Mintlify Documentation

on:
  pull_request:
    paths:
      - .github/workflows/mintlify-validate.yml
      - "**/*.mdx"
      - "**/*.md"
      - "docs.json"
      - "mint.json"
      - "**/openapi.yaml"
      - "**/openapi.yml"
      - "**/openapi.json"
  push:
    branches:
      - main
      - master

env:
  NODE_VERSION: "20"

jobs:
  broken-links:
    name: Check Broken Links
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ hashFiles('**/nx.json', '**/project.json') }}
          restore-keys: |
            nx-${{ runner.os }}-

      - name: Check for broken links
        run: |
          echo "::group::Checking for broken links"
          npx nx@latest validate-broken-links
          echo "::endgroup::"

  accessibility:
    name: Check Accessibility
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ hashFiles('**/nx.json', '**/project.json') }}
          restore-keys: |
            nx-${{ runner.os }}-

      - name: Check accessibility
        run: |
          echo "::group::Checking accessibility"
          npx nx@latest validate-accessibility
          echo "::endgroup::"

  openapi:
    name: Validate OpenAPI Specs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: .nx/cache
          key: nx-${{ runner.os }}-${{ hashFiles('**/nx.json', '**/project.json') }}
          restore-keys: |
            nx-${{ runner.os }}-

      - name: Validate OpenAPI specs
        run: |
          echo "::group::Validating OpenAPI specifications"
          npx nx@latest validate-openapi
          echo "::endgroup::"

  summary:
    name: Validation Summary
    runs-on: ubuntu-latest
    needs: [broken-links, accessibility, openapi]
    if: always()

    steps:
      - name: Generate Summary
        run: |
          echo "## Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.broken-links.result }}" == "success" ]; then
            echo "✅ **Broken Links Check**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Broken Links Check**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.accessibility.result }}" == "success" ]; then
            echo "✅ **Accessibility Check**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Accessibility Check**: Failed" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.openapi.result }}" == "success" ]; then
            echo "✅ **OpenAPI Validation**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **OpenAPI Validation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
